name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# https://github.com/vitejs/vite/blob/main/.github/workflows/ci.yml
env:
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144


# Remove default permissions of GITHUB_TOKEN for security
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

jobs:
  lint:
    # autofix workflow will be triggered instead for PRs
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: ðŸ“¦ Install dependencies
        run: pnpm install

      - name: ðŸ”Ž Lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: ðŸ“¦ Install dependencies
        run: pnpm install

      # - name: ðŸ§ª Run test suite
      # run: pnpm test

      - name: ðŸ§ª Test types
        run: pnpm test:types

  register-commands:
    if: github.event_name == 'push'
    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: ðŸ“„ Create .env file
        run: |
          echo "NUXT_DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
          echo "NUXT_DISCORD_APPLICATION_ID=${{ secrets.DISCORD_APPLICATION_ID }}" >> .env

      - name: ðŸ“¦ Install dependencies
        run: pnpm install

      - name: ðŸ¤– Register Discord slash commands
        run: pnpm register

  local:
    if: github.event_name == 'push'
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Connect and run command on remote server
        uses: and-fm/cloudflared-ssh-action@v3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private_key_filename: ${{ secrets.SSH_PRIVATE_KEY_FILENAME }}
          private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          service_token_id: ${{ secrets.CLOUDFLARED_SERVICE_TOKEN_ID }}
          service_token_secret: ${{ secrets.CLOUDFLARED_SERVICE_TOKEN_SECRET }}
          commands: |
            cd /apps/dodoria
            git fetch
            git pull --rebase
            export NVM_DIR=/usr/local/nvm
            source /usr/local/nvm/nvm.sh
            pnpm i
            pnpm build:local
            export PM2_HOME=/usr/local/share/pm2
            /usr/local/share/pnpm/pm2 restart dodoria --silent
